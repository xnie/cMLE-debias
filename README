This is the repository for the cMLE algorithm used in paper "Why Adaptively Collected Data Have Negative Bias, and How to Correct for It" by Xinkun Nie, Xiaoying Tian, Jonathan Taylor, and James Zou
Details see https://arxiv.org/abs/1708.01977

Note that for potential parallel processing, we divide up all the number of repeated trials into D divisions. Run main.py for each of these divisions, and run process_div.py to tally the output. Example usage see run.sh. The usage of main.py and process_div.py are detailed as follows.  

Usage: main.py [options]

Options:
  -h, --help            show this help message and exit
  -s CHOICES, --choices=CHOICES
                        Choose from all, 2-best, 2-bw, 3-best, 3-mid
  -a ALG, --alg=ALG     Choose from greedy, thom, lil-ucb, e-greedy
  -v                    Set verbose to True
  -q                    Set verbose to False
  -r NUM_REPEATS, --numrepeats=NUM_REPEATS
                        Number of repeats
  -t NUM_ROUNDS, --numrounds=NUM_ROUNDS
                        Number of rounds/horizon for each of the repeating
                        trials
  -g SGD_ROUNDS, --sgdrounds=SGD_ROUNDS
                        Number of SGD (stochastic gradient descent) steps
  -z SGD_STEPSIZE, --sgdstepsize=SGD_STEPSIZE
                        Step size of SGD
  -m MCMC_CYCLES, --mcmccycles=MCMC_CYCLES
                        Number of MCMC steps
  -c MCMC_STEPSIZE, --mcmcstepsize=MCMC_STEPSIZE
                        MCMC step size
  -e EXP_TYPE, --experiment=EXP_TYPE
                        Type of experiment. Choose from single-debias for
                        debiasing experiments, or vary-mu for general
                        experiments without debiasing
  -x MU_SCALE, --muscale=MU_SCALE
                        The scale of how far apart the means of the arms are
                        from each other. Default is 0.5. Details see
                        scenarios.py
  -b GUMBEL_SCALE, --gumbelscale=GUMBEL_SCALE
                        The scale parameter for the added Gumbel noise.
  -w GREEDY_EPSILON, --greedyepsilon=GREEDY_EPSILON
                        Epsilon in epsilon-Greedy
  -f                    Set True for varying the Gumbel noise magnitude with
                        time
  -p                    Set False for varying the Gumbel noise magnitude with
                        time
  -l                    Set True for logging data at every round
  -d DISTR, --distr=DISTR
                        The distribution for each arm. Only available choice
                        currently: gauss
  -u TRIALS_TUNE, --tune=TRIALS_TUNE
                        The number of MCMC steps used to automatically tune
                        the MCMC step size based on the acceptance ratio
  -y                    Set True for adding Gumbel noise to all rewards
  -j                    Set False for adding Gumbel noise to all rewards
  -k DIV                Number of divisions to divide up the trials for faster
                        experimental time. See process_div.py to combine
                        results from such divisions.
  -o OUTPUT_DIR, --out=OUTPUT_DIR
                        The file location for the output directory

Usage: process_div.py [options]

Options:
  -h, --help            show this help message and exit
  -i INPUT_DIR, --input=INPUT_DIR
                        Input directory to consolidate experiment outputs
  -a ALG, --alg=ALG     The bandit algorithm used for the experiments
  -x MU_SCALE, --muscale=MU_SCALE
                        The scale of how far apart the means of the arms are
                        from each other. Default is 0.5. Details see
                        scenarios.py
  -b GUMBEL_SCALE, --gumbelscale=GUMBEL_SCALE
                        The scale parameter for the added Gumbel noise
  -s CHOICE, --choice=CHOICE
                        Choose from all, 2-best, 2-bw, 3-best, 3-mid
  -t NUM_ROUNDS, --numrounds=NUM_ROUNDS
                        Number of rounds/horizon for each of the repeating
                        trials
  -w GREEDY_EPSILON, --greedyepsilon=GREEDY_EPSILON
                        Epsilon in epsilon-Greedy
  -e EXP_TYPE, --experiment=EXP_TYPE
                        Type of experiment. Choose from single-debias for
                        debiasing experiments, or vary-mu for general
                        experiments without debiasing
  -d DISTR, --distr=DISTR
                        The distribution for each arm. Only available choice
                        currently: gauss
  -k DIVS               Number of divisions to collect experiment output from
  -r NUM_REPEATS, --numrepeats=NUM_REPEATS
                        Number of repeats

Example:
python dev/main.py -s all -a lil-ucb -r 1000 -t 500 -g 1000 -z 0.01 -u 20 -m 30 -c 1.0 -e single-debias -x 0.5 -b 1.0 -w 0.1 -k 10 -p -y -o out -v
